@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width">

    <title>界面</title>
    @*<link rel="stylesheet" href="https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">*@
    <link rel="stylesheet" href="http://122.112.245.147:8080/arcgis_js_api/library/3.17/3.17/dijit/themes/claro/claro.css">
    <link rel="stylesheet" href="http://122.112.245.147:8080/arcgis_js_api/library/3.17/3.17/esri/css/esri.css">

    <link rel="stylesheet" href="../themes/twitter-bootstrap3.3.7.min.css"/>
    <link rel="stylesheet" href="../weui-master/style/weui.css" />
    <link rel="stylesheet" href="../weui-master/style/weui2.css" />
    <link rel="stylesheet" href="../weui-master/style/weui3.css" />
    <script src="../weui-master/zepto.min.js"></script>


    <link href="~/themes/Site.css" rel="stylesheet" />

    <link href="~/themes/menu.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.2.1.min.js"></script>
    <script src="~/Scripts/vue.min.js"></script>
    <script src="~/Scripts/vue-resource.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script type="text/javascript" src="http://122.112.245.147:8080/arcgis_js_api/library/3.17/3.17/init.js"></script>
    <script type="text/javascript" src="~/Scripts/json2.js"></script>
    <script src="~/Scripts/QyTech/nav4.js"></script>
    <script src="~/Scripts/QyTech/Sonic.js"></script>
    <script src="~/Scripts/QyTech.js"></script>
    @*<script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=zogQhcGTaQUNycXl5OrdXq9Z"></script>*@

    <!--<script type="text/javascript" src="/js/Qytech/myArc.js"></script>-->
    <style>
        .layerdisp {
            background-color: #33ffcc !important;
            z-index: 200;
        }

        .layernodisp {
            background-color: white;
            z-index: 200;
        }

        .retPosBtn {
            background-Image: url('/Wjkfq_Gis/themes/imgs/retPos.jpg');
            z-index: 200;
        }

        .stopPosBtn {
            background-Image: url('/Wjkfq_Gis/themes/imgs/stopPos.jpg');
            z-index: 200;
        }

        .DituBtnVec {
            background-Image: url('/Wjkfq_Gis/themes/imgs/ditu.jpg');
            z-index: 200;
        }

        .DituBtnWei {
            background-Image: url('/Wjkfq_Gis/themes/imgs/weixing.jpg');
            z-index: 200;
        }

        .PhotoBtn {
            background-Image: url('/Wjkfq_Gis/themes/imgs/takephoto.jpg');
            z-index: 200;
        }


        .esriPopup .titleButton.maximize {
            display: none;
        }


        .iosForZheGai {
            top: 55px;
        }
    </style>
    <script>
        var WebServer = '';
        var jpgForDitu = '';
        console.log(window.location.host);

        //矢量图
        var MapServers = [];

        var bsU_Id = '';
        var UserName = 'admin';
        var UserOperRight = "管理员";
        var bsUserRightCode = ''
        var UserCanEdit = true;

        var map;
        var setLayers;
        var CurrLayerName;
        var Djlayers = [];
        var DjFeatureLayers = [];
        var CurrPosition;

        var LastClickMapPnt;

        //var PositionStartFlag = '';
        var StartPositinoIntervalId = -1;
        //规则：所有菜单项和按钮项都给定统一的编号规则，方便将来统一处理相互关系
        // 101:镇查询 102：村查询
        //叠加，查询合成一个：单击叠加或取消，叠加则自动设为查询编辑状态
        //301：历年批次查询 302：城市规划查询 303 土地现状查询 304 房屋建筑查询
        //401：企业查询定位
        var CurrFunItem = 303;
        var bolClickMap = false;//默认土地现状查询
        var IsReCenter = false;

        Djlayers.push('房屋建筑');
        Djlayers.push('企业范围');
        Djlayers.push('管理区');


        var ValidExtent = [];//33100, 53879, 41386, 60000
        //ValidExtent.push(33300);
        //ValidExtent.push(53000);
        //ValidExtent.push(41800);
        //ValidExtent.push(59800);
        ValidExtent.push(13427613);
        ValidExtent.push(3621007);
        ValidExtent.push(13449878);
        ValidExtent.push(3640878);


        var GridVisibleLayerDisp = false;

        var CurrPositionX = 0; //1.3404237808521E7;
        var CurrPositionY = 0;//3663125.12817;

        var fealayer_Photo;
        var fealayer_AnQuan;


        function GetGridMapAddrByOrgCode(orgcode) {
            if (orgcode.length >= 12) {//320507100001
                return 'http://122.112.245.147/arcgis/rest/services/wd/cun' + orgcode + '/MapServer';
            }
            else {
                return 'http://122.112.245.147/arcgis/rest/services/WTMap/WTService/MapServer';
            }
        }

        function MapServer(Name, Url, LayerNo, MapType, IsBeginLoad, Opacity, visibleSubLayindex, LoadLayer) {
            var oserver = new Object;
            oserver.Name = Name;
            oserver.Url = Url;
            oserver.LayerNo = LayerNo;
            oserver.MapType = MapType;
            oserver.IsBeginLoad = IsBeginLoad;
            oserver.Opacity = Opacity;
            oserver.visibleSubLayindex = visibleSubLayindex;
            oserver.LoadLayer = LoadLayer;
            return oserver;
        }

        function Layer(LayerName, visible, EditView, QueryFName, ServerIndex, Index1st, LayerQueryIndex, FunId) {
            var olayer = new Object;
            olayer.visible = visible;
            olayer.LayerName = LayerName;
            olayer.EditView = EditView;
            olayer.QueryFName = QueryFName;
            olayer.ServerIndex = ServerIndex;
            olayer.Index1st = Index1st;
            olayer.LayerQueryIndex = LayerQueryIndex;
            olayer.FunId = FunId;
            return olayer;
        }
                                          //http://118.123.6.146:14795/arcgis/rest/services/wj/WjMapLocal/MapServer
        var mapserver1 = MapServer('s1', 'http://122.112.245.147:6080/arcgis/rest/services/WJMap/MyMapService/MapServer', 0, 'Dynamic', true, 1, [4, 5, 6, 7], '');
        var mapserver2 = MapServer('s2', 'http://122.112.245.147:6080/arcgis/rest/services/WJMap/MyMapService/MapServer', 1, 'Dynamic', true, 1, [], '');
        var mapserver3 = MapServer('s3', 'http://122.112.245.147:6080/arcgis/rest/services/WJMap/MyMapService/MapServer', 2, 'Dynamic', true, 1, [11, 12, 13, 14, 15, 16], '');
        //var mapserver3 = MapServer('s3', 'http://122.112.245.147:6080/arcgis/rest/services/WTMap/WtPublish3/MapServer', 1, 'Dynamic', true, 1, [], '');
        //var mapserver4 = MapServer('s4', 'http://122.112.245.147:6080/arcgis/rest/services/WTMap/WTService/MapServer', 0, 'Dynamic', true, 1, [], '');

        MapServers.push(mapserver1);
        MapServers.push(mapserver2);
        MapServers.push(mapserver3);
        //MapServers.push(mapserver4);


        //,,,,,,,,,,,


        var Layer1 = Layer("企业照片点位置", false, "", "", 0, 0, [0], '');
        var Layer2 = Layer("安全检查点位置", false, "", "", 0, 1, [1], '');
        var Layer3 = Layer("黄牌警告点位置", false, "", "", 0, 2, [2], '');
        var Layer4 = Layer("红牌警告点位置", false, "", "", 0, 3, [3], '');

        var Layer5 = Layer("行政区", true, "", "", 0, 4, [4], '');
        var Layer6 = Layer("管理区", true, "", "", 0, 5, [5], '');
        var Layer7 = Layer("房屋建筑", true, "fwjzWebView", "OBJECTID", 0, 6, [6], '');
        var Layer8 = Layer("企业范围", true, "QyxxWebView", "DKBH", 0, 7, [7], '');

        var Layer8_1 = Layer("城市规划注记注记2", false, "", "", 1, 8, [8,9], '');
        var Layer8_2 = Layer("城市规划", false, "", "", 1, 8, [8,9,10], '');

        var Layer9 = Layer("道路注记", true, "", "", 2, 11, [11, 12], '');

        var Layer10 = Layer("河流注记", true, "", "", 2, 13, [13, 14], '');
        var Layer11 = Layer("道路", true, "", "", 2, 15, [15], '');
        var Layer12 = Layer("河流", true, "", "",2, 16, [16], '');

        //var weiLayer = Layer('影像', false, "", "", 3, 0, [0], '');

        var dic_Layer = new Array();
        dic_Layer['企业照片点位置'] = Layer1;
        dic_Layer['安全检查点位置'] = Layer2;
        dic_Layer['黄牌警告点位置'] = Layer3;
        dic_Layer['红牌警告点位置'] = Layer4;
         dic_Layer['行政区'] = Layer5;
        dic_Layer['管理区'] = Layer6;
        dic_Layer['房屋建筑'] = Layer7;
        dic_Layer['企业范围'] = Layer8;

        dic_Layer['城市规划注记注记2'] = Layer8_1;
        dic_Layer['城市规划'] = Layer8_2;

        dic_Layer['道路注记'] = Layer9;

        dic_Layer['河流注记'] = Layer10;
        dic_Layer['道路'] = Layer11;
        dic_Layer['河流'] = Layer12;



        // dic_Layer['影像'] = weiLayer;

        var LayerOrder = [];
        LayerOrder.push('企业照片点位置');
        LayerOrder.push('红牌警告点位置');
        LayerOrder.push('黄牌警告点位置');
        LayerOrder.push('安全检查点位置');
        LayerOrder.push('行政区');
        LayerOrder.push('管理区');
        LayerOrder.push('房屋建筑');
        LayerOrder.push('企业范围');

        LayerOrder.push('城市规划注记注记2');
        LayerOrder.push('城市规划');


        LayerOrder.push('道路注记');
        LayerOrder.push('河流注记');
        LayerOrder.push('道路');
        LayerOrder.push('河流');
        // LayerOrder.push('影像');


        var dic_LayerTrans = new Array();
        for (var i = 0; i < 14; i++) {
            dic_LayerTrans[i] = 1;
        }
        //dic_LayerTrans[16] = 0.4;
        //dic_LayerTrans[17] = 0.4;
        //dic_LayerTrans[19] = 0.4;
        //dic_LayerTrans[21] = 0.4;

        var FeaLayer = []
        for (var i = 0; i < 12; i++) {
            FeaLayer.push('');
        }


        var arrFeaturelayerUrls = [];

        function InitFeatureLayer() {
            for (var i = 0; i < 17; i++) {
                arrFeaturelayers.push(MapServer + '/1');
            }
            for (var i = 0; i < arrFeaturelayers.length; i++) {
                fealayer = new esri.layers.FeatureLayer(MapServer[1].Url + '/' + featureindex, {
                    mode: esri.layers.FeatureLayer.MODE_SNAPSHOT,
                    outFields: ["*"],
                    hasAttributionData: true,
                    opacity: dic_LayerTrans[featureindex]
                })
            }

            var featureindex;
            for (var i = 0; i < DjFeatureLayers.length; i++) {
                var layname = DjFeatureLayers[i];
                for (var i = 0; i < dic_Layer[layname].LayerQueryIndex.length; i++) {
                    featureindex = dic_Layer[layname].LayerQueryIndex[i];
                    fealayer = new esri.layers.FeatureLayer(MapServer[1].Url + '/' + featureindex, {
                        mode: esri.layers.FeatureLayer.MODE_SNAPSHOT,
                        outFields: ["*"],
                        hasAttributionData: true,
                        opacity: dic_LayerTrans[featureindex]
                    })

                    var statesLabel = new TextSymbol().setColor(new Color("#0a162c"));
                    statesLabel.font.setSize("15pt");
                    statesLabel.font.setWeight(700);
                    var labelClass = new LabelClass({
                        "labelExpressionInfo": {
                            "value": "{labelField}"
                        }
                    });
                    labelClass.symbol = statesLabel;
                    featureLayer.setLabelingInfo([labelClass]);

                    arrFeaturelayers.push(fealayer);
                    map.addLayer(fealayer, 2);
                    // if (FeaLayer[featureindex] != "") {
                    //     //fealayer = FeaLayer[featureindex];
                    //     fealayer = map.getLayer('graphicsLayer2');
                    //     //map.getLayer(map.layerIds[j]);
                    //    // fealayer.opacity = 0;// dic_LayerTrans[featureindex];

                    //     fealayer.opacity =0.5;
                    //     //fealayer.visible = true;
                    //}

                    // fealayer = GetFeatureLayer(featureindex, )
                    // if (fealayer !== undefined) {
                    //     arrFeaturelayers.push(fealayer);
                    //     map.addLayer(fealayer, 2)
                    // }
                    // else {
                    //     console.log(featureindex + ' not create');
                    // };
                }
            }
        }

        // var dic_Menu2ServerAddr=new Array();
        // dic_Menu2ServerAddr['101']=WebServer+'/showview/resultview';
        // dic_Menu2ServerAddr['102']=WebServer+'/showview/resultview';

        function QueryLayerInfo(LayerName, ObjCode) {
            var olayer = new Object;
            olayer.LayerName = LayerName;
            olayer.ObjCode = ObjCode;
            return olayer;
        }

        function DjLayerAddrConf(LayerName, Layerindexs) {
            var olayer = new Object;
            olayer.LayerName = LayerName;
            olayer.Layerindexs = Layerindexs;
            return olayer;
        }
        function initMap(orgcode) {
            require([
				"esri/map",
                'esri/geometry/Extent',
				"esri/layers/ArcGISDynamicMapServiceLayer",
               "esri/layers/FeatureLayer",
               	"esri/layers/ImageParameters",
				//"esri/dijit/OverviewMap",
				//"dojo/parser",
                "dojo/dom",
                 "esri/InfoTemplate",
				"esri/tasks/query",
				"esri/toolbars/draw",
                "esri/symbols/SimpleMarkerSymbol",
				"esri/symbols/SimpleFillSymbol",
				"esri/symbols/SimpleLineSymbol",
            	"esri/tasks/FindTask",
				//"esri/tasks/FindParameters",
				"esri/tasks/IdentifyTask",
				"esri/tasks/IdentifyParameters",//"dijit/layout/ContentPane",//?
				  // "esri/layers/ArcGISTiledMapServicelayer",
             //"dijit/layout/BorderContainer",//?

			    // "esri/tasks/GenerateRendererParameters",
               // "esri/renderers/UniqueValueRenderer",
               // "esri/renderers/ClassBreaksRenderer",
            // "esri/geometry/webMercatorUtils",
                "esri/tasks/GeometryService",
                "esri/tasks/BufferParameters",
		        "esri/renderers/SimpleRenderer",
				"esri/graphic",
				"dojo/colors",
               "dojo/domReady!"
            ],
				function (Map, Extent, ArcGISDynamicMapServiceLayer, FeatureLayer, ImageParameters
                   // , OverviewMap  , parser
						, on
						, dom
                        , InfoTemplate, query
						, draw, SimpleMarkerSymbol, SimpleFillSymbol, SimpleLineSymbol
                    , FindTask, IdentifyTask, IdentifyParameters
                    , BufferParameters
                        , SimpleRenderer, Graphic, Color

                        ) {
				    //parser.parse();
				    //var options = { logo: false, center: [35775.71034270822, 59792.31742212466], zoom: 8 }; //var MyMap = new esri.Map(mapContainer, options);
				    var options = { logo: false, slider: false, };
				    map = new Map("map", options);

                    var s = 2;
                    var VectorLayer3 = new ArcGISDynamicMapServiceLayer(MapServers[s].Url);
                    VectorLayer3.opacity = MapServers[s].Opacity;
                    map.addLayer(VectorLayer3, 1);
                    setLayers(VectorLayer3, MapServers[s].visibleSubLayindex);
                    MapServers[s].LoadLayer = VectorLayer3;

                    var s = 1;
                    var VectorLayer2 = new ArcGISDynamicMapServiceLayer(MapServers[s].Url);
                    VectorLayer2.opacity = MapServers[s].Opacity;
                    map.addLayer(VectorLayer2, 1);
                    setLayers(VectorLayer2, MapServers[s].visibleSubLayindex);
                    MapServers[s].LoadLayer = VectorLayer2;


                    var s = 0;
                    var VectorLayer1 = new ArcGISDynamicMapServiceLayer(MapServers[s].Url);
                    VectorLayer1.opacity = MapServers[s].Opacity;
                    map.addLayer(VectorLayer1, 1);
                    setLayers(VectorLayer1, MapServers[s].visibleSubLayindex);
                    MapServers[s].LoadLayer = VectorLayer1;

                    //企业照片点
                    fealayer_Photo = new esri.layers.FeatureLayer(MapServers[s].Url + '/0', {
                        // displayOnPan: true,
                        mode: esri.layers.FeatureLayer.MODE_SNAPSHOT,//MODE_SNAPSHOT,MODE_ONDEMAND
                        outFields: ["*"],
                        //infoTemplate: infoTemplate,
                        //hasAttributionData: true,
                        //visible: mapoptions.featureLayers[i].visible,
                        //opacity: 1
                    })
                    map.addLayer(fealayer_Photo); fealayer_Photo.setDefinitionExpression("OBJECTID=-1");

                    fealayer_AnQuan = new esri.layers.FeatureLayer(MapServers[s].Url + '/1', {
                        // displayOnPan: true,
                        mode: esri.layers.FeatureLayer.MODE_SNAPSHOT,//MODE_SNAPSHOT,MODE_ONDEMAND
                        outFields: ["*"],
                        //infoTemplate: infoTemplate,
                        //hasAttributionData: true,
                        //visible: mapoptions.featureLayers[i].visible,
                        //opacity: 1
                    })
                    map.addLayer(fealayer_AnQuan); fealayer_AnQuan.setDefinitionExpression("OBJECTID=-1");


				    map.on("click", mapClick);
				    map.on("MouseMove", showCoordinates);
				    map.on("extent-change", showExtent);
				    //VectorLayer.on("onLoad", LoadList);
				    // dojo.connect(VectorLayer4, "onLoad", LoadList);

                    //ZhaoPianPntTemplate = new esri.infoTemplate();
				}
			);
        }




        function LoadList(layers) {
            var html = ""
            //获取地图服务中的子图层对象数组，该对象包含子图层的基本信息，不包含属性信息
            var infos = layers.layerInfos;
            //分别处理每个信息对象
            for (var i = 0, length = infos.length; i < length; i++) {
                var info = infos[i];
                //获取图层默认显示情况，如默认为true显示的话就把图层id添加到visible数组中
                if (info.defaultVisibility) {
                    visible.push(info.id);
                }
                //输出图层列表的html
                html = html +
                        "<div><input id='" + info.id + "' name='layerList' class='listCss' type='checkbox' value='checkbox' " +
                        "onclick='<span style=" + '"color:#FF6666;"' + ">setLayerVisibility()</span>' " + (info.defaultVisibility ? "checked" : "") + " />" + info.name + "</div>";
            }
            //设置可视图层
            layer.setVisibleLayers(visible);
            //在右边显示图层名列表
            dojo.byId("divInMap").innerHTML = html;
        }

        //关联checkbox的click事件
        setLayerVisibility = function () {
            //用dojo.query获取css为listCss的元素数组
            var inputs = dojo.query(".listCss");
            //清空数组
            visible = [];
            //对checkbox数组进行变量把选中的id添加到visible
            for (var i = 0; i < inputs.length; i++) {
                if (inputs[i].checked) {
                    visible.push(inputs[i].id);
                }
            }
            //设置可视图层
            layer.setVisibleLayers(visible);
        }

        function FilterLayerDisp(Url, filter) {
            var layerDefinitions = [];//定义过滤条件
            //过滤5个图层
            layerDefinitions[0] = "NAME_ = '11'";
            layerDefinitions[1] = "NAME_ = '高区' or NAME_ = '环翠区'";
            layerDefinitions[2] = "NAME_ = '0002'";
            layerDefinitions[3] = "NAME_ = '0002'";
            layerDefinitions[4] = "NAME_ = '0002'";
            layer1.setLayerDefinitions(layerDefinitions);//开始过滤
        }

        function showCoordinates(evt) {
            return;
            //从事件中获取mapPoint
            var mp = evt.mapPoint;
            //显示鼠标坐标
            console.log(mp.x + "," + mp.y);
        }
        function showExtent(ext) {
            var extentString = "";

            var mapCenter = map.extent.getCenter();
            //var mapZoom=map.extent.z

            extentString = "XMin: " + ext.extent.xmin +
              " YMin: " + ext.extent.ymin +
              " XMax: " + ext.extent.xmax +
              " YMax: " + ext.extent.ymax +
              " Center: " + mapCenter.x + "," + mapCenter.y +
	        "SR:" + ext.extent.spatialReference.wkt;
            console.log(extentString);


            var currRange = [];
            currRange.push(ext.extent.xmin);
            currRange.push(ext.extent.ymin);
            currRange.push(ext.extent.xmax);
            currRange.push((ext.extent.ymax + '').substring(0, 14));
            //if (isNaN(ext.extent.ymin) || isNaN(ext.extent.ymax)) {
            //    console.log('y is NaN is not valid');
            //    return;
            //}


            //if (isNaN(currRange[0]) || isNaN(currRange[1]) || isNaN(currRange[2]) || isNaN(currRange[3])) {
            //    console.log('NaN is not valid');
            //    //var startExtent = new esri.geometry.Extent(ValidExtent[0], ValidExtent[1], ValidExtent[2], ValidExtent[3], map.spatialReference);
            //    //map.setExtent(startExtent);
            //}
            //else {
            //    //if (!(ext.extent.xmin == ValidExtent[0] && ext.extent.ymin == ValidExtent[1] && ext.extent.xmax == ValidExtent[2] && ext.execute.yma == ValidExtent[3])) {
            //    //各种设备高宽比里不定，只考虑宽度即可
            //    if (!(currRange[0] == ValidExtent[0] && currRange[2] == ValidExtent[2])) {
            //        var val = currRange[0] + "," + currRange[1] + "," + currRange[2] + "," + currRange[3];
            //        setCookie("mapextent", val);
            //        console.log('set cookie:' + val);
            //    }
            //}
            //var strExtent = getCookie("mapextent");//('mapextent');
            //console.log('query cookie:'+strExtent);

        }

        setLayers = function (layer, vis) {
            if (layer != '') {
                layer.setVisibleLayers(vis);
            }
            else {
                console.log('layer unuseful');
            }
        }

        //图层显示控制
        function btnDispLayer(btnid, LayerName) {
            $("#FunGroup1").attr("class", "off");
            $("#FunGroup4").attr("class", "off");

            bolClickMap = false;
            if (btnid.substring(0, 2) == "F1") {
                DispFeatureLayer(btnid, LayerName);
            }
            else if (btnid.substring(0, 2) == "F5") {
                CurrLayerName = LayerName;
                CurrFunItem = btnid;

                if (dic_Layer[CurrLayerName].visible === false) {
                    bolClickMap = true;

                    dic_Layer[CurrLayerName].visible = true;// !dic_Layer[CurrLayerName].visible;
                     $("#" + btnid).attr("class", "btn btn-default layerdisp");
                    if (btnid == "F501") {
                        $.ajax({ //这里使用到Jquery的ajax方法
                            type: "Get",
                            dataType: "text",   //dataType: 'jsonp',//crossDomain: true,
                            url: WebServer + "/ProblemLtdPhoto/GetDkbms", //请求的处理数据
                            data: {},
                            success: function (data) {
                                try {
                                    var testJson = data;//.serializeArray();// JSON.parse(json_string);// $.parseJSON(data);
                                    var filter = "DKBH in (" + testJson + ")";
                                    fealayer_Photo.setDefinitionExpression(filter);
                                }
                                catch (e) { alert(e); }
                            }
                        });
                    }
                    else if (btnid == "F502") {
                        $.ajax({ //这里使用到Jquery的ajax方法
                            type: "Get",
                            dataType: "text",   //dataType: 'jsonp',//crossDomain: true,
                            url: WebServer + "/ProblemLtdAnQuan/GetDkbms", //请求的处理数据
                            data: {},
                            success: function (data) {
                                try {
                                    var testJson = data;//.serializeArray();// JSON.parse(json_string);// $.parseJSON(data);
                                    var filter = "DKBH in (" + testJson + ")";
                                    fealayer_AnQuan.setDefinitionExpression(filter);
                                }
                                catch (e) { alert(e); }
                            }
                        });
                    }
                }
                else {
                    bolClickMap = false;

                    dic_Layer[CurrLayerName].visible = false;
                    $("#" + btnid).attr("class", "btn btn-default layernodisp");
                    if (btnid == "F501") {
                        fealayer_Photo.setDefinitionExpression("OBJECTID=-1");
                    }
                    else if (btnid == "F502") {
                        fealayer_AnQuan.setDefinitionExpression("OBJECTID=-1");
                    }
                }

            }
            else {
                DispLayerNew(btnid, LayerName);
            }
            //处理界面，即前面打勾,如果有勾就取消，否则就增加

            //var sf101 = document.getElementById('F101');
            //sf101.innerHTML = 'abc';
            //console.log(sf101.innerHtml);
        }



        function DispFeatureLayer(btnid, LayerName) {
            //先改变css
            if (DjFeatureLayers.contains(LayerName) == true) {
                DjFeatureLayers.remove(LayerName);
                $("#" + btnid).attr("class", "btn btn-default layernodisp");
            }
            else {
                DjFeatureLayers.push(LayerName);
                $("#" + btnid).attr("class", "btn btn-default layerdisp");
            }

            if (btnid == 'F101') {
                //DjFeatureLayers.remove('建设管制核查');
                //DjFeatureLayers.remove('城市规划核查');
                dic_Layer['城市规划注记注记2'].visible = true;
                dic_Layer['城市规划'].visible = true;
                //dic_Layer['建设管制核查'].visible = false;
                //dic_Layer['城市规划核查'].visible = false;
                //$("#F102").attr("class", "btn btn-default layernodisp");
                //$("#F103").attr("class", "btn btn-default layernodisp");
            }
            else if (btnid == 'F102') {

                DjFeatureLayers.remove('基本农田核查');
                DjFeatureLayers.remove('城市规划核查');
                dic_Layer['基本农田核查'].visible = false;
                dic_Layer['建设管制核查'].visible = true;
                dic_Layer['城市规划核查'].visible = false;
                $("#F101").attr("class", "btn btn-default layernodisp");
                $("#F103").attr("class", "btn btn-default layernodisp");
            }
            else if (btnid == 'F103') {
                DjFeatureLayers.remove('基本农田核查');
                DjFeatureLayers.remove('建设管制核查');
                dic_Layer['基本农田核查'].visible = false;
                dic_Layer['建设管制核查'].visible = false;
                dic_Layer["城市规划核查"].visible = true;
                $("#F101").attr("class", "btn btn-default layernodisp");
                $("#F102").attr("class", "btn btn-default layernodisp");
            }

            RefreshFeatureDisplay();
        }

        function RefreshFeatureDisplay() {
            if (MapServers[1].LoadLayer != '') {
                var tVectorLayer = MapServers[1].LoadLayer;
                map.removeLayer(tVectorLayer);
            }
            if (DjFeatureLayers.length > 0) {
                var s = 1;
                var VectorLayer = new esri.layers.ArcGISDynamicMapServiceLayer(MapServers[s].Url);
                if (DjFeatureLayers[0] == "城市规划") {
                    VectorLayer.opacity = dic_LayerTrans[10];// 0.5;//dic_LayerTrans[featureindex]
                }
                //else if (DjFeatureLayers[0] == "建设管制核查") {
                //    VectorLayer.opacity = dic_LayerTrans[19];// 0.5;//dic_LayerTrans[featureindex]
                //}
                //else {//城市规划核查
                //    VectorLayer.opacity = dic_LayerTrans[21];// 0.5;//dic_LayerTrans[featureindex]
                //}
                MapServers[s].LoadLayer = VectorLayer;

                map.addLayer(VectorLayer, MapServers[s].LayerNo);

                var layname = DjFeatureLayers[0];
                setLayers(VectorLayer, dic_Layer[layname].LayerQueryIndex);
            }

            return;
            //以下代码无效
            var fealayer;
            for (var i = arrFeaturelayers.length - 1; i >= 0 ; i--) {
                fealayer = arrFeaturelayers[i];
                map.removeLayer(fealayer);
                arrFeaturelayers.pop(fealayer);
            }
            var featureindex;
            for (var i = 0; i < DjFeatureLayers.length; i++) {
                var layname = DjFeatureLayers[i];
                for (var i = 0; i < dic_Layer[layname].LayerQueryIndex.length; i++) {
                    featureindex = dic_Layer[layname].LayerQueryIndex[i];
                    fealayer = new esri.layers.FeatureLayer(MapServer[1].Url + '/' + featureindex, {
                        mode: esri.layers.FeatureLayer.MODE_SNAPSHOT,
                        outFields: ["*"],
                        hasAttributionData: true,
                        opacity: dic_LayerTrans[featureindex]
                    })

                    var statesLabel = new TextSymbol().setColor(new Color("#0a162c"));
                    statesLabel.font.setSize("15pt");
                    statesLabel.font.setWeight(700);
                    var labelClass = new LabelClass({
                        "labelExpressionInfo": {
                            "value": "{labelField}"
                        }
                    });
                    labelClass.symbol = statesLabel;
                    featureLayer.setLabelingInfo([labelClass]);

                    arrFeaturelayers.push(fealayer);
                    map.addLayer(fealayer, 2);
                    // if (FeaLayer[featureindex] != "") {
                    //     //fealayer = FeaLayer[featureindex];
                    //     fealayer = map.getLayer('graphicsLayer2');
                    //     //map.getLayer(map.layerIds[j]);
                    //    // fealayer.opacity = 0;// dic_LayerTrans[featureindex];

                    //     fealayer.opacity =0.5;
                    //     //fealayer.visible = true;
                    //}

                    // fealayer = GetFeatureLayer(featureindex, )
                    // if (fealayer !== undefined) {
                    //     arrFeaturelayers.push(fealayer);
                    //     map.addLayer(fealayer, 2)
                    // }
                    // else {
                    //     console.log(featureindex + ' not create');
                    // };
                }
            }
        }

        function DispLayerNew(btnid, LayerName) {



            //处理叠加
            var LayerFwDisp = null
            if (LayerName == '影像') {
                GridVisibleLayerDisp = !GridVisibleLayerDisp;
                if (GridVisibleLayerDisp == true) {
                    dic_Layer[LayerName].visible = true;
                    setLayers(MapServers[3].LoadLayer, [0]);
                    $("#" + btnid).attr("class", "btn btn-default DituBtnVec");
                    if (Djlayers.contains('房屋建筑') == true) {
                        dic_Layer['房屋建筑_地'].visible = false;
                        dic_Layer['房屋建筑_卫'].visible = true;
                    }
                }
                else {
                    dic_Layer[LayerName].visible = false;
                    setLayers(MapServers[3].LoadLayer, []);
                    $("#" + btnid).attr("class", "btn btn-default DituBtnWei");
                    if (Djlayers.contains('房屋建筑') == true) {
                        dic_Layer['房屋建筑_地'].visible = true;
                        dic_Layer['房屋建筑_卫'].visible = false;
                    }
                }

            }
            else {
                if (LayerName == '房屋建筑') { //房屋建筑有区别
                    if (Djlayers.contains(LayerName) == true) {
                        //dic_Layer['房屋建筑_地'].visible = false;
                        dic_Layer['房屋建筑'].visible = false;
                        $("#" + btnid).attr("class", "btn btn-default layernodisp");
                        Djlayers.remove(LayerName);
                    }
                    else {
                        if (GridVisibleLayerDisp == true) {
                            dic_Layer['房屋建筑_地'].visible = false;
                            dic_Layer['房屋建筑_卫'].visible = true;
                        }
                        else {
                            dic_Layer['房屋建筑'].visible = true;
                            //dic_Layer['房屋建筑_卫'].visible = false;
                        }
                        $("#" + btnid).attr("class", "btn btn-default layerdisp");
                        Djlayers.push(LayerName);
                    }
                }
                else {
                    if (Djlayers.contains(LayerName) == true) {
                        Djlayers.remove(LayerName);
                        dic_Layer[LayerName].visible = false;
                        $("#" + btnid).attr("class", "btn btn-default layernodisp");
                    }
                    else {
                        Djlayers.push(LayerName);
                        dic_Layer[LayerName].visible = true;
                        $("#" + btnid).attr("class", "btn btn-default layerdisp");
                    }
                }
            }

            //对所有叠加处理可见性
            for (var s = 0; s <= MapServers.length - 1; s++) {  //没有栅格，所以为s<=
                MapServers[s].visibleSubLayindex = [];
                for (var i = 0; i < LayerOrder.length; i++) {
                    if (dic_Layer[LayerOrder[i]].ServerIndex == s && dic_Layer[LayerOrder[i]].visible == true) {
                        MapServers[s].visibleSubLayindex = MapServers[s].visibleSubLayindex.concat(dic_Layer[LayerOrder[i]].LayerQueryIndex);
                    }
                }
                setLayers(MapServers[s].LoadLayer, MapServers[s].visibleSubLayindex);
            }
            //VectorVisibleLayer = GetVisibleLayers();
            //setLayers(VectorLayer, VectorVisibleLayer);
        }

        function CreateSelfLayer(layername) {

        }

        function GetVisibleLayers() {
            var layers = [];
            for (var i = 0; i < LayerOrder.length; i++) {
                if (dic_Layer[LayerOrder[i]].visible == true) {
                    layers = layers.concat(dic_Layer[LayerOrder[i]].LayerQueryIndex);
                }
            }
            return layers;
        }

        //这个叠加具有多充显示的逻辑，目前不使用

        function HaveValueInArray(val) {
            for (i in VectorVisibleLayer) {
                v = VectorVisibleLayer[i];
                if (v == val) {
                    return true;
                }
            }
            return false;
        }


        function mapClick(e) {
            if (bolClickMap == false) {
                return;
            }
            // alert("mc1");
            map.graphics.clear();
            //获得用户点击的地图坐标
            var point = e.mapPoint;
            // alert("mc2:"+point.x+","+point.y);

            if (CurrFunItem.substring(0, 2) == 'F5') {
                //先进行查询，然后再结果中进一步显示信息窗口
                doIdentify(point);
                return;
                var queryTask = new esri.tasks.QueryTask(MapServers[dic_Layer[CurrLayerName].ServerIndex].Url + "/" + dic_Layer[CurrLayerName].Index1st);
                if (navigator.userAgent.match(/(iPhone|iPod|ios)/i)) {

                    ClearCacheResponse();
                }
                queryTask.execute(query, showProblem4FindResult, errorResult);

                //if (CurrFunItem == "F501") {
                //    btnProblemClick('企业照片点位置 ', point);
                //}
                //doBuffer(point);
            }
            else {
                //实例化查询参数
                var query = new esri.tasks.Query();
                query.geometry = point;
                query.outFields = ["*"];
                query.outSpatialReference = map.spatialReference;
                query.spatialRelationship = esri.tasks.Query.SPATIAL_REL_INTERSECTS;
                query.returnGeometry = true;

                //实例化查询对象
                //alert("mc3" + "/" + dic_Layer[CurrLayerName].Index1st);
                var queryTask = new esri.tasks.QueryTask(MapServers[dic_Layer[CurrLayerName].ServerIndex].Url + "/" + dic_Layer[CurrLayerName].Index1st);
                //进行查询
                //ios.clearCacheResponse();
                if (navigator.userAgent.match(/(iPhone|iPod|ios)/i)) {

                    ClearCacheResponse();
                }
                queryTask.execute(query, showFindResult, errorResult);
            }
        }



        function errorResult(queryResult) {
            alert(queryResult);
        }
        function doIdentify(pnt) {
            LastClickMapPnt = pnt;
            // 清除上一次的高亮显示
            map.graphics.clear();
            // Identify的geometry
            var identifyParams;
            identifyParams = new esri.tasks.IdentifyParameters(); // IdentifyTask参数设置
            identifyParams.tolerance = 3;// 冗余范围
            identifyParams.returnGeometry = true;// 返回地理元素
            identifyParams.layerIds = [7]; // 进行Identify的图层
            identifyParams.layerOption = esri.tasks.IdentifyParameters.LAYER_OPTION_ALL;// 进行Identify的图层为全部
            identifyParams.geometry = pnt;
            identifyParams.mapExtent = map.extent; // Identify范围


            var identifyTask;
            identifyTask = new esri.tasks.IdentifyTask(MapServers[0].Url);
            identifyTask.execute(identifyParams, function (idResults) {
                showProblem4FindResult(idResults);
            });
        }
        ///4个点图层的处理
        function showProblem4FindResult(idResults) {
            queryResult = { displayFieldName: null, features: [] };
            for (var i = 0, il = idResults.length; i < il; i++) {
                var idResult = idResults[i];
                if (!queryResult.displayFieldName) {
                    queryResult.displayFieldName = idResult.displayFieldName;
                }
                queryResult.features.push(idResult.feature);

            }

            //首先根据点得到改点的dkbm，然后根据dkbm进行查询，获取该地块上的照片信息

            if (queryResult.features.length == 0)
                return;
            var feature = queryResult.features[0];
            var geometry = feature.geometry;
            //var dkbm_ = feature.attributes[dic_Layer[CurrLayerName].QueryFName];
            var dkbm_ = feature.attributes["DKBH"];

            if (CurrFunItem == 'F501') {
                //获得feature的dkbm，然后从数据库中获取数据，json结果显示
                  $.ajax({ //这里使用到Jquery的ajax方法
                    type: "Get",
                    dataType: "json",   //dataType: 'jsonp',//crossDomain: true,
                      url: WebServer + "/ProblemLtdPhoto/GetByDkbm", //请求的处理数据
                    data: { dkbm: dkbm_ },
                    success: function (data) {
                        try {
                            var testJson = data;//.serializeArray();// JSON.parse(json_string);// $.parseJSON(data);
                            //testJson = JSON.stringify(testJson);// testJson.stringify();
                            var list = "";
                            //list +="  <style>   .divphoto";
                            //list += "{";
                            //list += "    width: 300px;";
                            //list += "    margin-left: auto;";
                            //list += "    margin-right: auto;";
                            //list += "}";

                            //list += "</style >";
                            list += "<div style='overflow: scroll'>";
                            for (var i = 0; i < testJson.length; i++) {
                                list += (i + 1) + '  ' + testJson[i].SSQYMC + ' '
                                list += "</p>";
                                list += "<div style='width:100'>";
                                list += "　　　　" + "<img style='width:100%' src='http://122.112.245.147:8004/Mobile/Uploads/" + testJson[i].PICTURE + "'>"
                                list += "</div>";
                                list += "</p>";
                                list += "　　　　" + testJson[i].PicMemo;
                                list += "</p>";
                            }
                            list += "</div>";
                            //$("#result").append(list)
                            // $("#result").innerhtml=(list);
                            //altRows('LtdTable');
                            map.infoWindow.setTitle("照片信息");
                            map.infoWindow.setContent(list);
                            //把信息模板显示在中心点上
                            map.infoWindow.show(LastClickMapPnt);
                            map.infoWindow.on("hide", hideInfoWindow);
                        }
                        catch (e) { alert(e); }
                    }
                });
            }
            else if (CurrFunItem == 'F502') {
                //获得feature的dkbm，然后从数据库中获取数据，json结果显示
                $.ajax({ //这里使用到Jquery的ajax方法
                    type: "Get",
                    dataType: "json",   //dataType: 'jsonp',//crossDomain: true,
                    url: WebServer + "/ProblemLtdAnQuan/GetByDkbm", //请求的处理数据
                    data: { dkbm: dkbm_ },
                    success: function (data) {
                        try {
                            var testJson = data;//.serializeArray();// JSON.parse(json_string);// $.parseJSON(data);
                            //testJson = JSON.stringify(testJson);// testJson.stringify();
                            var list = '';
                            for (var i = 0; i < testJson.length; i++) {
                                list += (i + 1) + '  ' + testJson[i].企业名称 +'</p>   ' + testJson[i].立案查处类型;
                                list += "</p>";

                            }
                            //$("#result").append(list)
                            // $("#result").innerhtml=(list);
                            //altRows('LtdTable');
                            map.infoWindow.setTitle("安全信息");
                            map.infoWindow.setContent(list);
                            //把信息模板显示在中心点上
                            map.infoWindow.show(LastClickMapPnt);
                            map.infoWindow.on("hide", hideInfoWindow);
                        }
                        catch (e) { alert(e); }
                    }
                });
            }
        }

        //安全点等使用
        function doBuffer(pnt) {
            map.graphics.clear();

            var params = new esri.tasks.BufferParameters();
            params.geometries = pnt;//[evt.geometry];
            params.distances = 50;// [document.getElementById('bufferDistance').value];
            params.unit = esri.tasks.GeometryService.UNIT_KILOMETER;
            params.outSpatialReference = map.spatialReference;
            params.bufferSpatialReference = map.spatialReference;;// new SpatialReference({ wkid: 102113 });
            gsvc.buffer(params, doQuery);
        }
        //安全点等使用
        function doQuery(polygon) {
            var symbol = new SimpleFillSymbol("none",
                new SimpleLineSymbol("dashdot", new Color([255, 0, 0]), 2),
                new Color([255, 255, 0, 0.25]));
            var graphic = new Graphic(polygon[0], symbol);
            map.graphics.add(graphic);

            query.geometry = graphic.geometry;
            queryTask.execute(query, showResult);
        }
        //安全点等使用
        function showResult(fset) {
            var symbol = new SimpleMarkerSymbol();
            symbol.style = SimpleMarkerSymbol.STYLE_SQUARE;
            symbol.setSize(8);
            symbol.setColor(new Color([255, 255, 0, 0.5]));

            var resultFeatures = fset.features;
            for (var i = 0, il = resultFeatures.length; i < il; i++) {
                var graphic = resultFeatures[i];
                graphic.setSymbol(symbol);
                graphic.setInfoTemplate(infoTemplate);
                map.graphics.add(graphic);
            }

            // 将属性信息显示在Grid中
            drawTable(resultFeatures);

            var totalPopulation = sumPopulation(fset);
            var r = "";
            r = "<i>" + totalPopulation + "</i>";
            document.getElementById('totalPopulation').innerHTML = r;

            document.getElementById("numberOfBlocks").innerHTML = resultFeatures.length;

            tb.deactivate();
        }

        //企业，房屋的信息查询结果显示使用
        function showFindResult(queryResult) {
            if (queryResult.features == 0) {
                alert("没有该元素");
                return;
            }
            try {
                //alert("s1:" + queryResult.features.length);
                for (var i = 0; i < queryResult.features.length; i++) {
                    var feature = queryResult.features[i];
                    //alert("s2:" + queryResult.features[i].attributes[dic_Layer[CurrLayerName].QueryFName]);
                    //定义高亮图形的符号
                    //1.定义面的边界线符号
                    var outline = new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_DASHDOT, new dojo.Color([255, 0, 0]), 3);
                    //2.定义面符号
                    var PolygonSymbol = new esri.symbol.SimpleFillSymbol(esri.symbol.SimpleFillSymbol.STYLE_SOLID, outline, new dojo.Color([0, 255, 0, 1]));

                    var graphic = new esri.Graphic();


                    //创建客户端图形
                    graphic.setGeometry(feature.geometry);
                    //设置查询到的graphic的显示样式
                    graphic.setSymbol(PolygonSymbol);

                    map.graphics.clear();
                    //var graphic = new Graphic(geometry, PolygonSymbol);
                    //将客户端图形添加到map中
                    map.graphics.add(graphic);

                    //setTimeout(function (map) {
                    //    map.graphics.clear();
                    //}, 1000);
                }
            }
            catch (e) {
                alert(e);
            }
            if (CurrFunItem.substring(0, 1) == '1') {
                var feature = queryResult.features[0];
                var geometry = feature.geometry;
                var dkcode = feature.attributes[dic_Layer[CurrLayerName].QueryFName];
                SpatialQuery(CurrLayerName, dkcode)
            }
            else if (CurrFunItem.substring(0, 2) == 'F2') {

                var feature = queryResult.features[0];
                var geometry = feature.geometry;
                var dkbm = feature.attributes[dic_Layer[CurrLayerName].QueryFName];
                var url = WebServer + "/EditView/" + dic_Layer[CurrLayerName].EditView + "?id=" + dkbm + "&bsU_Id=" + bsU_Id;
                //alert("s3:" + queryResult.features[0].attributes[dic_Layer[CurrLayerName].QueryFName]);
                ShowUrl(url);
            }
            else if (CurrFunItem == "F110") {
                var feature = queryResult.features[0];
                var geometry = feature.geometry;
                var dkbm = feature.attributes[dic_Layer[CurrLayerName].QueryFName];
                var ltdname = feature.attributes["YDQYMC"];
                if (ltdname == null) {
                    alert('该地块没有企业名称，请核实数据！');
                }
                else if (ltdname.trim() != ''){
                    if (isANumber(CurrPositionX)) {
                        para = dkbm + ";" + ltdname + ";" + CurrPositionX + "," + CurrPositionY
                        console.log(dkbm);
                        console.log(ltdname);
                        console.log(CurrPositionX);
                        console.log(CurrPositionY);
                        if (para != '') {
                            var url = WebServer + "/takePhoto/index?paras=" + para;
                            ShowUrl(url);
                        }
                        else {
                            alert('数据没有正常获取，请再试一次！');
                        }
                    }
                    else {
                        alert("没有获取到坐标，请重新选择！");
                    }
                }
                else {
                    alert('该地块企业名称没有输入，请核实数据！');
                }
            }
        }
        function isANumber(inputData) {
            //isNaN(inputData)不能判断空串或一个空格
            //如果是一个空串或是一个空格，而isNaN是做为数字0进行处理的，而parseInt与parseFloat是返回一个错误消息，这个isNaN检查不严密而导致的。
            if (parseFloat(inputData).toString() == "NaN") {
                //alert(“请输入数字……”);
                return false;
            } else {
                return true;
            }
        }
        function SpatialQuery(LayerName, ObjCode) {

            //var json = eval('(' + str + ')');
            var objStr = QueryLayerInfo(LayerName, ObjCode);
            //var strjson=objStr.toJSONString();
            var strjson = JSON.stringify(objStr);
            var url = WebServer + "/showview/resultview?json=" + strjson;

            ShowUrl(url);
        }

        function btnReturn() {
            history.go(-1);
            //$("#div3th").hide();
            //$("#LtdPos").hide();
            $("#container").show();
        }
        function ShowUrl(url) {

            //location.href = url;

            $("#divLoadPage").modal({
                remote: url,
                backdrop: 'static',
                keyboard: false
            });
            $("#divLoadPage").modal("show");
            //$("#container").hide();

        }

        //处理功能项菜单
        function MenuClick(FunItem, LayerName) {
            $("#FunGroup1").attr("class", "off");
            $("#FunGroup4").attr("class", "off");


            bolClickMap = false;
            CurrFunItem = FunItem;
            if (FunItem.substring(0, 2) == 'F5') {
                btnDispLayer(FunItem, LayerName);

            }
            else if (FunItem == 'F110') {
                if (!UserCanEdit) {
                    alert("当前登录用户为" + UserOperRight + ",不能拍照!");
                    return;
                }
                bolClickMap = true;
                CurrLayerName = '企业范围';
                CurrFunItem = FunItem;

                $("#FunGroup4").attr("class", "off");

                ////如果该图层没有加载，则加载
                if (!Djlayers.contains(CurrLayerName)) {
                    alert('该图层还没有显示，请先叠加图层!');
                }
                else {
                    if (LayerName == "房屋建筑") {
                        CurrLayerName = "房屋建筑";
                    }
                    else { }
                }
                //1.定位
                //固定定位即可
                ////////CurrPositionX = 13434468;
                ////////CurrPositionY = 3633129;
                ////////SetExtentWithPosition(CurrPositionX, CurrPositionY);
                //////////2.选择企业

                //////////3. 拍照
                //////////F110
                ////////var para ="KFQQY001"+";"+ "伊之密精密机械"+";"+ CurrPositionX + "," + CurrPositionY
                ////////var url = WebServer + "/takePhoto/index?paras=" + para;
                //////////alert("s3:" + queryResult.features[0].attributes[dic_Layer[CurrLayerName].QueryFName]);
                ////////ShowUrl(url);

                //////////4。预览并确认是企业照片还是检查照片，采用弹出框，查看后关闭或者确认上传

                //////////5。确认上传（信息：照片类型，照片，企业编码）
            }
            else if (FunItem == 'F104') {
                //设置透明度
                if (DjFeatureLayers.length == 0) {
                    alert('目前没有显示核查数据!');
                }
                else {
                    ShowSettingTransModel(DjFeatureLayers[0]);
                }
            }
            else if (FunItem == 'F301') {//企业定位
                $("#LtdPos").modal();
                //SetPosVisible(true);
            }
            else if (FunItem.substring(0, 2) == 'F2') {
                bolClickMap = true;
                CurrLayerName = LayerName;

                $("#FunGroup4").attr("class", "off");

                ////如果该图层没有加载，则加载
                if (!Djlayers.contains(CurrLayerName)) {
                    alert('该图层还没有显示，请先叠加图层!');
                    //if (LayerName==""){
                    //    DispLayer("btnTdxz", LayerName)}
                    //else if (LayerName=="房屋建筑"){
                    //    DispLayer("btnFw", LayerName)}
                    //else if (LayerName=="历年批次"){
                    //    DispLayer("btnLnpc", LayerName)}
                    //else if (LayerName=="城市规划"){
                    //    DispLayer("btnCsgh", LayerName)}

                    //    //VectorVisibleLayer.push(dic_Layer[CurrLayerName].LayerQueryIndex);
                    //    //setLayers(VectorLayer, VectorVisibleLayer);
                }
                else {
                    if (LayerName == "房屋建筑") {
                        CurrLayerName = "房屋建筑";
                    }
                    else { }
                }
            }
        }

        function LtdCheckControl(id) {
            var djindex = [];
            if (id == 101) {
                djindex = [15, 16, 17];
            }
            else if (id == 102) {
                djindex = [18, 19];
            }
            else if (id == 103) {
                djindex = [20, 21];
            }

            VectorVisibleLayer = VectorVisibleLayer.concat(djindex);
            setLayers(VectorLayer, VectorVisibleLayer);

        }

        //定位界面显示
        function SetPosVisible(posvisible) {
            $("#LtdTable tr:gt(0)").remove();
            $("#ltdname").val('');
            if (posvisible == true) {
                $("#LtdPos").modal();
            }
            //if (posvisible == true) {
            //    $("#LtdPos").show();
            //    $("#container").hide();
            //    $("#ltdname").focus();
            //}
            //else {
            //    $("#LtdPos").hide();
            //    $("#container").show();
            //}

        }
        //初始位置
        function InitPosition(flag) {
            console.log(flag);
            if (IsReCenter == true)
                return;
            IsReCenter = true;
            console.log('recenter');

            var query = new esri.tasks.Query();
            //把需要查询的底图服务加载进来
            var queryTask = new esri.tasks.QueryTask(MapServers[0].Url + "/4");
            //需要返回Geometry
            query.returnGeometry = true;
            //需要返回的字段
            query.outFields = ["*"];
            //设置查询条件，buildNo是之前DOM操作时从信息内容里取出来的
            //query.where = "行政镇编码 ='320507100'";
            query.where = "OBJECTID=1";
            //进行查询
            queryTask.execute(query, function (res) {
                var fea = res.features[0];
                //获取查询到的所有geometry的Extent用来设置查询后的地图显示
                var showExtent = fea.geometry.getExtent();
                //设置地图的视图范围
                map.setExtent(showExtent.expand(1));

            });
        }
        //开启定位
        function StartPosition(dkbm) {
            $('#LtdPos').modal('hide');
            var query = new esri.tasks.Query();
            //把需要查询的底图服务加载进来
            var queryTask = new esri.tasks.QueryTask(MapServers[0].Url + "/7");
            //需要返回Geometry
            query.returnGeometry = true;
            //需要返回的字段
            query.outFields = ["*"];
            //设置查询条件，buildNo是之前DOM操作时从信息内容里取出来的
            query.where = "DKBH ='" + dkbm + "'";
            //进行查询
            queryTask.execute(query, function (res) {
                SetPosVisible(false);
                var showExtent;
                for (var i = 0; i < res.features.length; i++) {
                    var fea = res.features[i];
                    var point = fea.geometry.getExtent().getCenter();

                    //设置信息模板infoWindow
                    map.infoWindow.setTitle("企业信息");
                    map.infoWindow.setContent("<p>" + fea.attributes["YDQYMC"] + "</p>");
                    //把信息模板显示在中心点上
                    map.infoWindow.show(point);
                    map.infoWindow.on("hide", hideInfoWindow);
                    //查询结果样式
                    try {
                        var symbol = new esri.symbol.SimpleFillSymbol(esri.symbol.SimpleFillSymbol.STYLE_SOLID,
                            new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID, new dojo.Color([255, 0, 0, 0.8]), 1),
                            new dojo.Color([125, 125, 125, 0.35]));
                    }
                    catch (e) {
                        alert(e);
                    }
                    var graphic = new esri.Graphic();
                    graphic.setGeometry(fea.geometry);
                    //设置查询到的graphic的显示样式
                    graphic.setSymbol(symbol);
                    //把查询结果添加到map.graphics中进行显示
                    map.graphics.clear();
                    //map.graphics.add(graphic);

                    var simpleMarkerSymbol1 = new esri.symbol.SimpleMarkerSymbol();
                    var graphic1 = new esri.Graphic(point, simpleMarkerSymbol1);
                    map.graphics.add(graphic1);


                    //获取查询到的所有geometry的Extent用来设置查询后的地图显示
                    if (i == 0) {
                        showExtent = fea.geometry.getExtent();
                    } else {
                        showExtent = showExtent.union(fea.geometry.getExtent());
                    }

                    //设置地图的视图范围
                    map.setExtent(showExtent.expand(3));
                }
            });
        }

        function hideInfoWindow() {
            map.graphics.clear();
        }
        //根据叠加判断需要显示的图层索引
        function getDjLayers() {
            var DjLayerCount = 0;
            for (var i = 0; i < Djlayers.length; i++) {
                DjLayerCount++;
            }
            var tmpDjLayers = [];
            if (Djlayers.contains('历年批次')) {
                tmpDjLayers.push('历年批次');
            }
            if (Djlayers.contains('城市规划')) {
                tmpDjLayers.push('城市规划');
            }
            if (Djlayers.contains('土地规划')) {
                tmpDjLayers.push('土地规划');
            }
            if (Djlayers.contains('土地现状')) {
                tmpDjLayers.push('土地现状');
            }

            var layindexs = [];
            var dic_DjLayerAddrConfs = [];
            dic_DjLayerAddrConfs['历年批次'] = [4, 4, 4, 4];
            dic_DjLayerAddrConfs['城市规划'] = [7, 8, 9, 10];
            dic_DjLayerAddrConfs['土地规划'] = [12, 13, 14, 15];
            dic_DjLayerAddrConfs['土地现状'] = [20, 21, 22, 23];

            if (GridVisibleLayerDisp == true) {//有影像
                if (DjLayerCount == 1) {
                    var layname = tmpDjLayers[0];
                    layindexs.push(dic_DjLayerAddrConfs[layname][1]);
                }
                else if (DjLayerCount == 2) {
                    var layname = tmpDjLayers[0];
                    layindexs.push(dic_DjLayerAddrConfs[layname][2]);
                    layname = tmpDjLayers[1];
                    layindexs.push(dic_DjLayerAddrConfs[layname][2]);
                }
                else if (DjLayerCount == 3) {
                    var layname = tmpDjLayers[0];
                    layindexs.push(dic_DjLayerAddrConfs[layname][2]);
                    layname = tmpDjLayers[1];
                    layindexs.push(dic_DjLayerAddrConfs[layname][2]);
                    layname = tmpDjLayers[2];
                    layindexs.push(dic_DjLayerAddrConfs[layname][2]);
                }
                else if (DjLayerCount == 4) {
                    var layname = tmpDjLayers[0];
                    layindexs.push(dic_DjLayerAddrConfs[layname][2]);
                    layname = tmpDjLayers[1];
                    layindexs.push(dic_DjLayerAddrConfs[layname][2]);
                    layname = tmpDjLayers[2];
                    layindexs.push(dic_DjLayerAddrConfs[layname][2]);
                    layname = tmpDjLayers[3];
                    layindexs.push(dic_DjLayerAddrConfs[layname][2]);
                }
            }
            else {//无影像
                if (DjLayerCount == 1) {
                    var layname = tmpDjLayers[0];
                    layindexs.push(dic_DjLayerAddrConfs[layname][0]);
                }
                else if (DjLayerCount == 2) {
                    var layname = tmpDjLayers[0];
                    layindexs.push(dic_DjLayerAddrConfs[layname][1]);
                    layname = tmpDjLayers[1];
                    layindexs.push(dic_DjLayerAddrConfs[layname][3]);
                }
                else if (DjLayerCount == 3) {
                    var layname = tmpDjLayers[0];
                    layindexs.push(dic_DjLayerAddrConfs[layname][2]);
                    layname = tmpDjLayers[1];
                    layindexs.push(dic_DjLayerAddrConfs[layname][2]);
                    layname = tmpDjLayers[2];
                    layindexs.push(dic_DjLayerAddrConfs[layname][3]);
                }
                else if (DjLayerCount == 4) {
                    var layname = tmpDjLayers[0];
                    layindexs.push(dic_DjLayerAddrConfs[layname][2]);
                    layname = tmpDjLayers[1];
                    layindexs.push(dic_DjLayerAddrConfs[layname][2]);
                    layname = tmpDjLayers[2];
                    layindexs.push(dic_DjLayerAddrConfs[layname][2]);
                    layname = tmpDjLayers[3];
                    layindexs.push(dic_DjLayerAddrConfs[layname][3]);

                }
            }
            return layindexs;
        }

        $(document).ready(function () {
            bsU_Id = "@ViewBag.bsU_Id";

            UserOperRight = "@ViewBag.bsR_Name";
            UserName = "@ViewBag.UserName";
            if (UserOperRight != "管理员") {
                UserCanEdit = false;
                alert("当前用户为浏览人员，不能修改提交数据！");//程序需要获取位置数据，数据存储权限\r\n");
                // $('#F110"').attr("display", "none");
                //$('#F110"').attr("visibility", "hidden");
            }
            //else {
            //    alert('程序需要获取位置数据，数据存储权限\r\n');
            //}
            $("#F110").attr("disabled", !UserCanEdit);

            var host = window.location.host;
            if (host.substring(0, 9) == 'localhost') {
                WebServer = 'http://' + host;
            }
            else {
                WebServer = 'http://' + host + '/Mobile';
            }
            jpgForDitu = WebServer + '/themes/imgs/retPos.jpg';

            setCookie("usesrname", 'admin');
            setCookie("userpwd", '123456');
            setCookie("userorg", '320507100');
            var orgcode = getCookie("userorg");
            initMap(orgcode);



            document.onreadystatechange = completeLoading;

            setTimeout('InitPosition(2)', 4000);


            //企业定位不显示
            SetPosVisible(false);

            ////ios的遮盖处理
            //alert(navigator.userAgent);
            if (navigator.userAgent.match(/(iPhone|iPod|ios)/i)) {
                //$("#btnTop").addClass("iosForZheGai");

                //$("#container").addClass("iosForZheGai");
                $("#LtdPos").addClass("iosForZheGai");
                $("#divSettingTransparent").addClass("iosForZheGai");
                $("#divLoadPage").addClass("iosForZheGai");


            }
            //启动定位
            setTimeout('FindPos()', 1000);

            SaveUserBrwoserInfo(bsU_Id, UserName+':index_m ready');

        });

        function SaveUserBrwoserInfo(userid, visitdesp) {

            var p = navigator.platform;
            var brower = {};
            brower.win = p.indexOf("Win") == 0;
            brower.mac = p.indexOf("Mac") == 0;
            brower.x11 = (p == "X11") || (p.indexOf("Linux") == 0);
            var userbrower = "";
            if (brower.win)
                userbrower = "win";
            else if (brower.mac)
                userbrower = "mac";
            else if (browe.x11)
                userbrower = "x11"

            var formData = new FormData();
            formData.append('userid', userid);
            formData.append('browser', userbrower);
            formData.append('visitdesp', visitdesp);

            $.ajax({
                url: '../bsVisitLog/Add',
                type: 'POST',
                data: formData,
                dataType: 'JSON',
                async: false,
                cache: false,
                contentType: false,
                processData: false,
                success: function (returndata) {
                    //alert(returndata.code);
                },
                error: function (returndata) {
                    //alert(returndata);
                }
            });
        }

        function GetFeatureLayer(lindex, opacity) {
            require([
				"esri/map",
               "esri/layers/FeatureLayer",

				"dojo/domReady!"
            ],
				function (Map, FeatureLayer) {
				    var featureLayer = new FeatureLayer(MapServer[1].Url + "/" + lindex, {
				        mode: FeatureLayer.MODE_SNAPSHOT,
				        outFields: ["*"],
				        hasAttributionData: true,
				        opacity: opacity
				    });
				    //featureLayer.setDefinitionExpression("行政村代码 = '320507100204'");
				    return featureLayer;
				}
			);
        }

        function completeLoading() {

            if (document.readyState == "complete") {
                InitPosition(1);
            }
        }
        Array.prototype.contains = function (needle) {
            for (i in this) {
                if (this[i] == needle) return true;
            }
            return false;
        }
        Array.prototype.indexOf = function (val) {
            for (var i = 0; i < this.length; i++) {
                if (this[i] == val) return i;
            }
            return -1;
        };

        Array.prototype.remove = function (val) {
            var index = this.indexOf(val);
            if (index > -1) {
                this.splice(index, 1);
            }
        };



        function targetto(url) {
            $("#showModal").modal({
                remote: url
            });
        }


        //4.每次隐藏时，清除数据。确保点击时，重新加载
        $("#showModal").on("hidden.bs.modal", function () {
            $(this).removeData("bs.modal");
        });


    </script>

    <script type="text/javascript">


        //JS操作cookies方法!
        //写cookies
        function setCookie(name, value) {
            var Days = 30;
            var exp = new Date();
            exp.setTime(exp.getTime() + Days * 24 * 60 * 60 * 1000);
            document.cookie = name + "=" + escape(value) + ";expires=" + exp.toGMTString();
        }

        function getCookie(name) {
            var arr, reg = new RegExp("(^| )" + name + "=([^;]*)(;|$)");
            if (arr = document.cookie.match(reg))
                return unescape(arr[2]);
            else
                return null;
        }
        function delCookie(name) {
            var exp = new Date();
            exp.setTime(exp.getTime() - 1);
            var cval = getCookie(name);
            if (cval != null)
                document.cookie = name + "=" + cval + ";expires=" + exp.toGMTString();
        }
        //使用示例
        //setCookie("name", "hayden");
        //alert(getCookie("name"));
        //如果需要设定自定义过期时间
        //那么把上面的setCookie　函数换成下面两个函数就ok;
        //程序代码
        //////function setCookie(name, value, time) {
        //////    var strsec = getsec(time);
        //////    var exp = new Date();
        //////    exp.setTime(exp.getTime() + strsec * 1);
        //////    document.cookie = name + "=" + escape(value) + ";expires=" + exp.toGMTString();
        //////}
        //////function getsec(str) {
        //////    alert(str);
        //////    var str1 = str.substring(1, str.length) * 1;
        //////    var str2 = str.substring(0, 1);
        //////    if (str2 == "s") {
        //////        return str1 * 1000;
        //////    }
        //////    else if (str2 == "h") {
        //////        return str1 * 60 * 60 * 1000;
        //////    }
        //////    else if (str2 == "d") {
        //////        return str1 * 24 * 60 * 60 * 1000;
        //////    }
        //////}
        //这是有设定过期时间的使用示例：
        //s20是代表20秒
        //h是指小时，如12小时则是：h12
        //d是天数，30天则：d30
        //setCookie("name", "hayden", "s20");

        var circle = new Sonic({

            width: 50,
            height: 50,
            padding: 50,

            strokeColor: '#000',

            pointDistance: .01,
            stepsPerFrame: 3,
            trailLength: .7,

            step: 'fader',

            setup: function () {
                this._.lineWidth = 5;
            },

            path: [
                ['arc', 125, 125, 25, 0, 360]
            ]

        });

    </script>
    <script>
        function SubmitQueryLtd() {
            var ltdname = $("#ltdname").val();
            if ($.trim(ltdname) == "") {
                alert("查询条件不能为空!");
                return;
            }
            var tbody = ""; //声明表格中body部分
            //$.getJSON(WebServer + "/lyRemoteserv/JsLtdQuery", [{ ltdname: '孙' }], showresult)

            $.ajax({ //这里使用到Jquery的ajax方法
                type: "Get",
                dataType: "json",   //dataType: 'jsonp',//crossDomain: true,
                url: WebServer + "/lyRemoteserv/JsLtdQuery", //请求的处理数据
                data: { ltdName: ltdname },
                success: function (data) {
                    try {
                        var testJson = data;//.serializeArray();// JSON.parse(json_string);// $.parseJSON(data);
                        //testJson = JSON.stringify(testJson);// testJson.stringify();
                        $("#LtdTable tr:gt(0)").remove();
                        for (var i = 0; i < testJson.length; i++) {
                            var trs = "";
                            trs += "<tr style='color:black'><td align='center'>" + (i + 1) + "</td><td>"
                                //trs += testJson[i].地块编码 + "</td><td>"
                                + '<a href="#" onclick="StartPosition(' + "'" + testJson[i].dkbm + "'" + ')"><span style=' + "'color:black'" + '>' + testJson[i].name + '</span></a>'
                                + "" + "</td></tr>";
                            tbody += trs;
                        }
                        $("#LtdTable").append(tbody);
                        //altRows('LtdTable');
                    }
                    catch (e) { alert(e); }
                }
            });

        }
        function showresult(data) {
            console.log(data);

        }

        function RetPos(id) {
            //alert(CurrPositionX+",,"+CurrPositionY);
            SetExtentWithPosition(CurrPositionX, CurrPositionY);
            //FindPos();
        }

        function RetPosTestValid() {
            //alert('测试默认位置:');
            var lng = 120.53049732538;
            var lat = 31.137585831154;//120.455639	31.429375 望亭镇政府

            lng = 120.455639;
            lat = 31.429375;

            var lnglat = '120.482194,31.442379';
            var ss = lnglat.split(',');
            var projection = new BMap.MercatorProjection();
            var point = projection.lngLatToPoint(new BMap.Point(ss[0], ss[1]));
            alert(point.x + ", " + point.y);
            console.log(point.x + ", " + point.y);
            return;

            var earthRad = 6378137.0;
            var x = lng * Math.PI / 180 * earthRad;
            var a = lat * Math.PI / 180;
            var y = earthRad / 2 * Math.log((1.0 + Math.sin(a)) / (1.0 - Math.sin(a)));
            alert(x + "," + y);

            $.get('/BdMapCoorsUtil/GcsToBD09II?lng=' + lng + '&lat=' + lat, function (data) {
                alert('gps您的位置是:' + data);
                var ss = data.split(",")
                var glng = ss[0];
                var glat = ss[1];
                var latlng = new esri.geometry.Point(glng, glat);
                var webMercator = esri.geometry.geographicToWebMercator(latlng);//地理坐标系必须要转换摩卡托的投影坐标系,不然聚合没效果

                alert('mercator您的位置：' + webMercator.x + ',' + webMercator.y);

                //描点
                var pt = new esri.geometry.Point(webMercator.x, webMercator.y, { "wkid": 4326 });
                var simpleMarkerSymbol1 = new esri.symbol.SimpleMarkerSymbol();
                var sms = new SimpleMarkerSymbol(SimpleMarkerSymbol.STYLE_SQUARE, 20,
                    new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID,
                        new dojo.Color([255, 0, 0]), 1),
                    new dojo.Color([0, 255, 0, 0.25]));

                var graphic1 = new esri.Graphic(pt, sms);
                map.graphics.clear();
                map.graphics.add(graphic1);

                var showExtent = pt.getExtent();

                //设置地图的视图范围
                // map.setExtent(showExtent.expand(5));


                // var pms = new esri.symbol.PictureMarkerSymbol("/themes/imgs/retPos.png", 24, 26)
                // var gImg = new Graphic();
                //gImg.setGeometry(pt);

                // map.graphics.add(gImg);


            });
        }
        function locationError(error) {
            switch (error.code) {
                case error.TIMEOUT:
                    alert("超时，请重试!");
                    break;
                case error.POSITION_UNAVAILABLE:
                    alert('对不起，不能检测您的位置!');
                    break;
                case error.PERMISSION_DENIED:
                    alert('定位被拒绝，请允许定位.');
                    break;
                case error.UNKNOWN_ERROR:
                    alert('未知错误!');
                    break;
                default:
                    alert('其他错误');
            }



        }
        function locationSuccess(position) {
            var coords = position.coords;

            CurrPosition = coords.latitude + ',' + coords.longitude;
            alert(CurrPosition);

            if (esri.geometry.webMercatorUtils.canProject(pt, map)) {
                result = webMercatorUtils.project(pt, map);
            }
            //var latlng = new google.maps.LatLng(
            //    // 维度
            //    coords.latitude,
            //    // 精度
            //    coords.longitude
            //);
            //在图中显示位置
            //alert(coords.longitude);
        }

        function iosgetpositioncallback(str) {
            //alert('获得定位数据为：' + str);
            var infos = str.split(/[:,]/);
            //var infos = data.split(/[:,]/);
            //$.get('/Wjkfq_Gis/GisUtil/WGS84ToWT?wgB=' + infos[3] + '&wgL=' + infos[1] + '&wgH=' + infos[5], function (data) {
            //    //alert(data);
            //    DrawPosition(data[1], data[0]);GcsToBD09II
            //});


            $.get('/Wjkfq_Gis/BdMapCoorsUtil/Wgs84ToBd09?Lng=' + infos[3] + '&Lat=' + infos[1], function (data) {
                //alert(data);
                DrawPosition(data[0], data[1]);
                CurrPositionX = data[0];
                CurrPositionY = data[1];
            });


        }
        function GetCurrIosPosition() {
            try {
                ios.Getposition();
            }
            catch (e) {
                alert(e);

                //PositionStartFlag = false;
                //clearInterval(StartPositinoIntervalId);
                //$("#F203").attr("class", "btn btn-default retPosBtn");
            }
        }

        function FindPos() {
            //if (navigator.geolocation) {
            //    navigator.geolocation.getCurrentPosition(locationSuccess, locationError, {
            //    //navigator.geolocation.watchPosition(locationSuccess, locationError, {
            //        // 指示浏览器获取高精度的位置，默认为false
            //        enableHighAccuracy: true,
            //        // 指定获取地理位置的超时时间，默认不限时，单位为毫秒
            //        timeout: 5000,
            //        // 最长有效期，在重复获取地理位置时，此参数指定多久再次获取位置。
            //        maximumAge: 3000
            //    });
            //} else {
            //    alert("对不起，您的设备不支持定位!");
            //}
            //if (((navigator.userAgent.match(/(iPhone|iPod|Android|ios|SymbianOS)/i))){

            if (navigator.userAgent.match(/(iPhone|iPod|ios)/i)) {
                try {
                    Startpositioning();;
                    StartPositinoIntervalId = setInterval("GetCurrIosPosition()", 4000);
                }
                catch (e) {
                    alert(e);
                }
                //if (PositionStartFlag != true) {
                //    PositionStartFlag = true;
                //    Startpositioning();;
                //    StartPositinoIntervalId=setInterval("GetCurrIosPosition()", 4000);
                //    $("#F203").attr("class", "btn btn-default stopPosBtn");
                //}
                //else {
                //    Endpositioning();;
                //    PositionStartFlag = false;
                //    clearInterval(StartPositinoIntervalId);
                //    $("#F203").attr("class", "btn btn-default retPosBtn");
                //}

            }
            else  //安卓百度定位
            {
                try {
                    window.BMapAndroid.SetCurrCorrType("bd09");
                    window.BMapAndroid.Startpositioning();
                    StartPositinoIntervalId = setInterval("BdForAndroidPosition()", 4000);
                }
                catch (e) {
                    alert(e);
                }
                //if (PositionStartFlag != true) {
                //    PositionStartFlag = true;
                //    //window.BMapAndroid.SetCurrCorrType("gcj02");
                //    //window.BMapAndroid.SetCurrCorrType("bd09ll");
                //    window.BMapAndroid.SetCurrCorrType("bd09");
                //    window.BMapAndroid.Startpositioning();
                //    StartPositinoIntervalId = setInterval("BdForAndroidPosition()", 4000);
                //    $("#F203").attr("class", "btn btn-default stopPosBtn");
                //}
                //else {
                //    PositionStartFlag = false;
                //    window.BMapAndroid.Endpositioning();
                //    clearInterval(StartPositinoIntervalId);
                //    $("#F203").attr("class", "btn btn-default retPosBtn");
                //}
            }
        }

        function BdForAndroidPosition() {
            try {

                //可选，设置返回经纬度坐标类型，默认gcj02
                //gcj02：国测局坐标；
                //bd09ll：百度经纬度坐标；
                //bd09：百度墨卡托坐标；
                //window.BMapAndroid.SetCurrCorrType("gcj02");
                //window.BMapAndroid.SetCurrCorrType("bd09ll");
                var data = window.BMapAndroid.GetCurrPositionInfo();
                if (typeof (data) == "undefined") {
                    //alert('定位数据无效');
                    return;
                }
                //alert(data);

                var items = data.split(/[:,]/);
                //alert(items[0] + ":" + items[1] + "," + items[2] + ":" + items[3] + "," + items[4] + ":" + items[5] + "," + items[8] + ":" + items[9]);

                //$.get('/Wjkfq_Gis/GisUtil/WGS84ToWT?wgB=' + items[3] + '&wgL=' + items[1] + '&wgH=' + items[9], function (data) {
                //    alert(data);
                //    DrawPosition(data[1], data[0]);
                //});
                DrawPosition(items[1], items[3]);
                CurrPositionX = items[1];
                CurrPositionY = items[3];

            }
            catch (e) {
                alert(e);
                //PositionStartFlag = false;
                //window.BMapAndroid.Endpositioning();
                //clearInterval(StartPositinoIntervalId);
                //$("#F203").attr("class", "btn btn-default retPosBtn");
            }
            //return;
            //var geolocation = new BMap.Geolocation();
            //geolocation.getCurrentPosition(function (r) {
            //    if (this.getStatus() == BMAP_STATUS_SUCCESS) {
            //        console.log(r.point.lng + ',' + r.point.lat);
            //        var xo = r.point.lng;//120.482198,31.442379
            //        var yo = r.point.lat;
            //        //var xo = 120.482198;
            //        //var yo = 31.442379;
            //        var projection = new BMap.MercatorProjection();
            //        var point = projection.lngLatToPoint(new BMap.Point(xo, yo));
            //        xo = point.y;
            //        yo = point.x;
            //        var Dx = -2995465.545121;
            //        var Dy = -11462568.553051;
            //        var Xt = 0.0074330865;//弧度
            //        var K = 0.855911728247;


            //        var x = Dx + K * (Math.cos(Xt) * xo - Math.sin(Xt) * yo);
            //        var y = Dy + K * (Math.sin(Xt) * xo + Math.cos(Xt) * yo);

            //        alert("lng,lat:" + r.point.lng + ',' + r.point.lat+",精度:"+r.accuracy+",平面坐标："+point.y+","+ point.x+"望亭坐标:"+y+","+x);;
            //        DrawPosition(y,x);
            //    }
            //    else {
            //        if (this.getStatus() == BMAP_STATUS_UNKNOWN_LOCATION) {
            //            alert('位置结果未知');
            //        }
            //        else if (this.getStatus() == BMAP_STATUS_UNKNOWN_ROUTE) {
            //            alert('导航结果未知');
            //        }
            //        else if (this.getStatus() == BMAP_STATUS_INVALID_KEY) {
            //            alert('非法密钥');
            //        }
            //        else if (this.getStatus() == BMAP_STATUS_INVALID_REQUEST) {
            //            alert('非法请求');
            //        }
            //        else if (this.getStatus() == BMAP_STATUS_PERMISSION_DENIED) {
            //            alert('没有权限');
            //        }
            //        else if (this.getStatus() == BMAP_STATUS_SERVICE_UNAVAILABLE) {
            //            alert('服务不可用');
            //        }
            //        else if (this.getStatus() == BMAP_STATUS_TIMEOUT) {
            //            alert('定位超时');
            //        }
            //        PositionStartFlag = false;
            //        clearInterval(StartPositinoIntervalId);
            //        $("#F203").attr("class", "btn btn-default retPosBtn");

            //    }
            //}, { enableHighAccuracy: true,maximumAge:0 })
        }
        function DrawPosition(x, y) {
            //if (PositionStartFlag ==false)
            //    return;
            x = x - 0;
            //alert("点："+x + "," + y + " 范围x1y1x2y2:" + ValidExtent[0] + " " + ValidExtent[2] + " " + ValidExtent[1] + " " + ValidExtent[3]);
            //alert('坐标:' + new Number(x) + "," + y);
            if (x >= ValidExtent[0] && x <= ValidExtent[2] && y >= ValidExtent[1] && y <= ValidExtent[3]) {
                //描点
                var pt = new esri.geometry.Point(x, y, map.spatialReference);//{ "wkid": 4326 });
                //alert('坐标:' + new Number(x) + "," + y+';标记点:' + pt.x + "," + pt.y);

                var cms = new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE, 25
                    , new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID, new dojo.Color([255, 69, 0]), 1), new dojo.Color([0, 255, 0, 0.25]));


                var graphic1 = new esri.Graphic(pt, cms);
                map.graphics.clear();
                map.graphics.add(graphic1);


                //var simpleMarkerSymbol1 = new esri.symbol.SimpleMarkerSymbol();
                //var sms = new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_SQUARE, 20
                //       ,new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID, new dojo.Color([255, 0, 0]), 1),new dojo.Color([0, 255, 0, 0.25]));

                //if (isNaN(ext.extent.ymin) || isNaN(ext.extent.ymax)) {
                //    console.log('y is NaN is not valid');
                //    return;
                //}


                //if (isNaN(currRange[0]) || isNaN(currRange[1]) || isNaN(currRange[2]) || isNaN(currRange[3])) {
                //    console.log('NaN is not valid');
                //    //var startExtent = new esri.geometry.Extent(ValidExtent[0], ValidExtent[1], ValidExtent[2], ValidExtent[3], map.spatialReference);
                //    //map.setExtent(startExtent);
                //$.get('/Wjkfq_Gis/BdMapCoorsUtil/GcsToBD09II?lng=' + r.point.lat + '&lat=' + r.point.lng , function (data) {
                //    alert('gcj02 gps您的位置是:' + data);

                //    var latlng = new esri.geometry.Point(r.point.lng, r.point.lat);
                //    var webMercator = esri.geometry.geographicToWebMercator(latlng);//地理坐标系必须要转换摩卡托的投影坐标系,不然聚合没效果

                //    alert('mercator您的位置：' + webMercator.x + ',' + webMercator.y);

                //});
            }

        }

        function SetExtentWithPosition(x, y) {
            try {
                if (x == 0 && y == 0) {
                    alert("正在启动定位...");
                    return;
                }
                x = x - 0;
                y = y - 0;
                DrawPosition(x, y);
                if (x < ValidExtent[0] || x > ValidExtent[2] || y < ValidExtent[1] || y > ValidExtent[3]) {

                    alert('您不在地图有效区域内，不能进行定位！(' + x + ',' + y + ')');
                    //PositionStartFlag = false;
                    //clearInterval(StartPositinoIntervalId);
                    //$("#F203").attr("class", "btn btn-default retPosBtn");
                }
                else {
                    var currRange = [];
                    currRange.push(x - 500);
                    currRange.push(y - 500);
                    currRange.push(x + 500);
                    currRange.push(y + 500);

                    var startExtent = new esri.geometry.Extent(currRange[0], currRange[1], currRange[2], currRange[3], map.spatialReference);
                    map.setExtent(startExtent);
                }
            }
            catch (e) {
                alert(e);
            }
        }

    </script>
</head>

<body>
    <div id="app">
        <div id="container">
            <div id="btnTop">
                @*<div class="btn-group"role="group" style="float:right">
                        <button id="F104" type="button" onclick="MenuClick(id,'透明度设置')" class="btn btn-default layernodisp">透</button>
				    <button id="F206" type="button"   class="btn btn-default">　</button>
					 	 
					      <button id="F201" type="button" onclick="MenuClick(id,'企业范围')" class="btn btn-default layernodisp">企</button>
					  <button id="F202" type="button" onclick="MenuClick(id,'房屋建筑')" class="btn btn-default layernodisp">房</button>
					
                       <button id="F204" type="button"   class="btn btn-default">　</button>
					     <button id="F203" type="button" onclick="RetPos(id)"  class="btn btn-default retPosBtn">　</button>
					   
					    <button id="F205" type="button" onclick="btnDispLayer(id,'影像')" class="btn btn-default DituBtnWei">　</button>
				  	   
              </div>*@

                <div>
                    <button id="F104" type="button" onclick="MenuClick(id,'透明度')" class="btn btn-default layernodisp" style="position: absolute; top: 100px; left: 0px">透</button>

                    <button id="F202" type="button" onclick="MenuClick(id,'房屋建筑')" class="btn btn-default layernodisp" style="position: absolute; top: 175px; left: 0px">房</button>
                    <button id="F201" type="button" onclick="MenuClick(id,'企业范围')" class="btn btn-default layernodisp" style="position: absolute; top: 140px; left: 0px">企</button>
                  
                    <button id="F203" type="button" onclick="RetPos(id)" class="btn btn-default retPosBtn" style="position: absolute; top: 215px; left: 0px">定</button>

                    @*<button id="F205" type="button" onclick="btnDispLayer(id,'影像')" class="btn btn-default DituBtnWei" style="position: absolute; top: 250px; left: 0px"></button>
                    *@<button id="F110" type="button" onclick="MenuClick(id,'拍照')" class="btn btn-default PhotoBtn" style="position: absolute; top: 250px; left: 0px">照</button>


                </div>

            </div>
            <div id="map">
            </div>

            <!--<div data-role="widget" data-widget="nav4" class="nav4">//不触发map click-->
            <div class="nav4">
                <nav>
                    <div id="nav4_ul" class="nav_4" style="color: yellow">
                        <ul class="box">
                            <li>
                                @* <a href="javascript:;" class="" id="FunGroup1"><span>企业核查</span></a>*@
                                 <a href="#"><span onclick="btnDispLayer(id,'城市规划')" id="F101">城市规划</span></a>
                                <!--  <dl>
         <dd><a href="#" class="menuitem"><span onclick="btnDispLayer(id,'城市规划')" id="F101">城市规划</span></a></dd>
         <dd><a href="#" class="menuitem"><span onclick="btnDispLayer(id,'建设管制核查')" id="F102">建设管制核查 </span></a></dd>
         <dd><a href="#" class="menuitem"><span onclick="btnDispLayer(id,'城市规划核查')" id="F103">城市规划核查</span></a></dd>

     </dl>-->
                            </li>
                            <li>
                                <!--     <a href="#"   data-toggle="modal" data-target="#PosLtd" ><span  onclick="MenuClick(id)" id="301">企业定位</span></a>
    			           -->
                                <a href="#"><span onclick="MenuClick(id)" id="F301">企业定位</span></a>

                            </li>
                            <li>
                                <a href="javascript:;" class="off" id="FunGroup4"><span>图层控制</span></a>
                                <dl>
                               
                                    <dd><a href="#" class="menuitem"><span onclick="MenuClick(id,'企业照片点位置')" id="F501" class="layernodisp">企业照片点</span></a></dd>
                                    <dd><a href="#" class="menuitem"><span onclick="MenuClick(id,'安全检查点位置')" id="F502" class="layernodisp">安全检查点</span></a></dd>
                                    <dd><a href="#" class="menuitem"><span onclick="MenuClick(id,'黄牌警告点位置')" id="F503" class="layernodisp">黄牌警告点</span></a></dd>
                                    <dd><a href="#" class="menuitem"><span onclick="MenuClick(id,'红牌警告点位置')" id="F504" class="layernodisp">红牌警告点</span></a></dd>
                                    <dd><a href="#" class="menuitem"><span onclick="btnDispLayer(id,'管理区')" id="F407" class="layerdisp">管理区</span></a></dd>
                                    <dd><a href="#" class="menuitem"><span onclick="btnDispLayer(id,'房屋建筑')" id="F405" class="layerdisp">房屋建筑</span></a></dd>
                                    <dd><a href="#" class="menuitem"><span onclick="btnDispLayer(id,'企业范围')" id="F406" class="layerdisp">企业信息</span></a>	</dd>
                                    @* <dd>	<a href="#" class="menuitem"><span onclick="btnDispLayer(id,'历年批次')" id="F403">历年批次</span></a></dd>	
						            <dd>	<a href="#" class="menuitem"><span  onclick="btnDispLayer(id,'未供及建设项目')" id="F407">未供及建设项目</span></a></dd>	
					                <dd>	<a href="#" class="menuitem"><span  onclick="btnDispLayer(id,'违法用地')" id="F408">违法用地</span></a></dd>	
						            <dd>	<a href="#" class="menuitem"><span   onclick="btnDispLayer(id,'土地现状')" id="F401">土地现状</span></a>	</dd>
						            <dd>	<a href="#" class="menuitem"><span  onclick="btnDispLayer(id,'土地规划')" id="F404">土地规划</span></a></dd>	
					                <dd>	<a href="#" class="menuitem"><span onclick="btnDispLayer(id,'城市规划')" id="F402">城市规划</span></a>	</dd>
						      *@
                                </dl>
                            </li>

                        </ul>
                    </div>
                </nav>

                <!-- <div id="nav4_masklayer" class="masklayer_div on">&nbsp;</div>-->
                <script src="~/Scripts/QyTech/nav4.js"></script>
                <script type="text/javascript">
                    nav4.bindClick(document.getElementById("nav4_ul").querySelectorAll("li>a"), document.getElementById("nav4_masklayer"));
                </script>
            </div>



        </div>
    </div>
    <div>
        <div id="LtdPos" class="modal fade"  style="background-color: #f8f8f8;">
            <div class="modal-dialog">
                <div class="modal-content" style="width: 100%; height: 800px">
                    <div class="modal-header">
                        <a class="close" data-dismiss="modal">×</a>
    
                        <h3 style="text-align: center; color: black;font-family:宋体">企业名称</h3>
                    </div>
                    <div class="modal-body">
                        <div class="weui_search_bar">
                            <input name="ltdname" id="ltdname" type="search" class="search-input" id='search' placeholder='关键字' style="box-sizing:content-box"/>
                            <button  class="weui_btn weui_btn_mini weui_btn_primary" onclick="SubmitQueryLtd();" ><i class="icon icon-4"></i></button>    
                        </div>
                        <div class="div100">
                            @*<input type="text" style="width: 80%; color: black" name="ltdname" id="ltdname" value="" />
                            <input id="postQuery" style="width: 15%; color: black; text-align: center" type="button" onclick="SubmitQueryLtd();" value="查询" />
                            *@
                            <div>
                                <div id="content" class="div100">
                                   @* <table class="altrowstable" id="LtdTable" style="width: inherit">*@
                                    <table class="weui-table weui-border-tb weui-table-2n" id="LtdTable">
                                        <thead>
                                            <tr style="background-color: #036C85; color: yellow;">
                                                <th></th>
                                                <th style="text-align: center; vertical-align: middle">用地单位名称</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>


                    </div>
                    <div class="modal-footer">
                        <a href="#" class="btn" style="color: black" data-dismiss="modal">关闭</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div>
        <div class="modal fade" id="divLoadPage">
            <div class="modal-dialog">
                <div class="modal-content" style="width: 100%; height: 800px">
                    <div class="modal-body">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div>
        <div id="divSettingTransparent" class="modal fade" role="dialog" aria-labelledby="abcde" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content" style="width: 100%; height: 300px; color: black">
                    <div class="modal-header">
                        <a class="close" data-dismiss="modal">×</a>
                          <h3 style="text-align: center; font-family:宋体">核查图层透明度设置</h3>
                    </div>
                    <div class="modal-body">
                        <div class="div100">
                            <div style="text-align: center">
                                <div style="float: left">透明</div>
                               <span id="val_tran"></span>  
                                <div style="float: right">不透明</div>

                            </div>
                        </div>
                        
                        <div class="div100">
                            
                            @*规划基本农田保护区:<input id="st_hgjbntbhq" type="range" step="5" min="0" max="100" value="40"/>
                            面 状 基 础 设 施:<input id="st_mzjcss" type="range" step="5" min="0" max="100" value="40"/>
                            建设用地管制区:<input id="st_jsydgzq" type="range" step="5" min="0" max="100" value="40"/>
                            城市规划:<input id="st_csgh" type="range" step="5" min="0" max="100" value="40"/>*@

                            <input id="st_checktrans" name="st_checktrans" type="range" step="5" min="0" max="100" value="40" oninput="changeTransTracker()" />
                        </div>
                        <div style="text-align: center">
                            <br />
                            <br />
                            <br />
                             <a id="postSetTrans" href="javascript:;" class="weui_btn weui_btn_primary" onclick="SubmitSetTrans();">确认</a>
                          @*  <input id="postSetTrans1" style="width: 15%; color: black" type="button" onclick="SubmitSetTrans();" value="确认" />*@
                        </div>

                    </div>
                    <div class="modal-footer">
                        <a href="#" class="btn" style="color: black" data-dismiss="modal">关闭</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div>
        <div id="divTestGps" class="modal fade" role="dialog" aria-labelledby="abcde" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content" style="width: 100%; height: 400px; color: blue">
                    <div class="modal-header">
                        <a class="close" data-dismiss="modal">×</a>
                        <h3 style="text-align: center">转换测试</h3>
                    </div>
                    <div class="modal-body">

                        <div class="div100">
                            经纬度（百度）:
                            <input id="lnglat" type="text" style="width: 100%" />

                        </div>
                        <div class="div100">
                            webMokatuo:
                            <input id="mkt" type="text" value="" style="width: 100%" />

                        </div>
                        <div style="text-align: center">
                            <br />
                            <br />
                            <br />
                            <input id="postSetTrans" style="width: 15%; color: black" type="button" onclick="Bd2WebMkt();" value="百度接口转莫卡托" />
                        </div>

                    </div>
                    <div class="modal-footer">
                        <a href="#" class="btn" data-dismiss="modal">关闭</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- <a href="#" id="aLoadPage" data-toggle='modal'   data-target='#divLoadPage' data-backdrop="static"  onclick="ShowUrl()"></a>
	 

</div> <!-- #app END -->
          <script>
              function changeTransTracker(){
                  var value = $('#st_checktrans').val();
                  var valStr = value + "% 100%";
                  $('#val_tran').html(value+'%');
                  $('#st_checktrans').css({
                      "background-size": valStr
                  })
                  $("input[name='st_checktrans']").val(value);
              }
              $(function () {
                  var $sliderTrack = $('#sliderTrack'),
                      $sliderHandler = $('#sliderHandler'),
                      $sliderValue = $('#sliderValue');

                  var totalLen = $('#sliderInner').width(),
                      startLeft = 0,
                      startX = 0;

                  $sliderHandler
                      .on('touchstart', function (e) {
                          startLeft = parseInt($sliderHandler.css('left')) * totalLen / 100;
                          startX = e.changedTouches[0].clientX;
                      })
                      .on('touchmove', function (e) {
                          var dist = startLeft + e.changedTouches[0].clientX - startX,
                              percent;
                          dist = dist < 0 ? 0 : dist > totalLen ? totalLen : dist;
                          percent = parseInt(dist / totalLen * 100);
                          $sliderTrack.css('width', percent + '%');
                          $sliderHandler.css('left', percent + '%');
                          $sliderValue.text(percent);

                          e.preventDefault();
                      })
                  ;

              });

      </script>
    <script>
        //circle.play();


        document.body.appendChild(circle.canvas);
        //document.onreadystatechange = completeLoading;
        //function completeLoading() {

        //    if (document.readyState == "complete") {

        //        document.body.removeChild(circle.canvas);
        //        //var loadingMask = document.getElementById(‘loadingDiv’);
        //        //loadingMask.parentNode.removeChild(loadingMask);

        //    }

        //}

        function ShowGpsTranModal() {
            $("#divTestGps").modal();
        }
        function Bd2WebMkt() {
            //$("#divSettingTransparent").modal({
            //    backdrop: 'static',
            //    keyboard: false
            //});
            //var lnglat = '120.482194,31.442379';
            lnglat = $('#lnglat').val();
            var ss = lnglat.split(',');
            var projection = new BMap.MercatorProjection();
            var point = projection.lngLatToPoint(new BMap.Point(ss[0], ss[1]));
            $("#mkt").val(point.x + ", " + point.y);
        }

        function ShowSettingTransModel(CheckLayerName) {
            if (DjFeatureLayers[0] == '城市规划') {
                $("#st_checktrans").val(100 * dic_LayerTrans[16]);
            }
            //else if (DjFeatureLayers[0] == '建设管制核查') {
            //    $("#st_checktrans").val(100 * dic_LayerTrans[19]);
            //}
            //else if (DjFeatureLayers[0] == '城市规划核查') {
            //    $("#st_checktrans").val(100 * dic_LayerTrans[21]);//"城市规划核查"
            //}

            //$("#st_hgjbntbhq").val(100 * dic_LayerTrans[16]);
            //$("#st_mzjcss").val(100 * dic_LayerTrans[17]);
            //$("#st_jsydgzq").val(100 * dic_LayerTrans[19]);
            //$("#st_csgh").val(100 * dic_LayerTrans[21]);

            $("#divSettingTransparent").modal();

        }

        function SubmitSetTrans() {
            if (DjFeatureLayers[0] == '城市规划') {
                dic_LayerTrans[10] = $("#st_checktrans").val() / 100;// 建设管制
            }
            //if (DjFeatureLayers[0] == '基本农田核查') {
            //    dic_LayerTrans[16] = $("#st_checktrans").val() / 100;
            //    dic_LayerTrans[17] = $("#st_checktrans").val() / 100;//面状基础设施
            //}
            //else if (DjFeatureLayers[0] == '建设管制核查') {
            //    dic_LayerTrans[19] = $("#st_checktrans").val() / 100;// 建设管制
            //}
            //else if (DjFeatureLayers[0] == '城市规划核查') {
            //    dic_LayerTrans[21] = $("#st_checktrans").val() / 100;//"城市规划核查"
            //}

            //Trans_Nt16=$("#st_hgjbntbhq").val()/100;;//规划基本农田
            //rans_Nt17=$("#st_mzjcss").val()/100;//面状基础设施
            //Trans_Jsgz19=$("#st_jsydgzq").val()/100;// 建设管制
            //Trans_Csgh21 = $("#st_csgh").val() / 100;//"城市规划核查"

            //再次刷新叠加图层
            RefreshFeatureDisplay();

        }



        $("#divLoadPage").on("hidden.bs.modal", function () {
            //alert("a1");
            $(this).removeData("bs.modal");
            //alert("a2");
        });
    </script>
</body>
</html>
